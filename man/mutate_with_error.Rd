% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mutate_with_error.R
\name{mutate_with_error}
\alias{mutate_with_error}
\title{Create, (delete) and modify numeric columns with Gaussian error propagation}
\usage{
mutate_with_error(.data, .arg, ...)
}
\arguments{
\item{.data}{A data frame, data frame extension (e.g. a tibble), or a
lazy data frame (e.g. from dbplyr or dtplyr).}

\item{.arg}{Name-value pairs. The name gives the name of the column in the
output.}

\item{...}{Same as \code{.arg}}
}
\value{
An object of the same type as \code{.data}. The output has the following
properties:
\itemize{
\item For \code{mutate()}:
\itemize{
\item Columns from \code{.data} will be preserved according to the \code{.keep} argument.
\item Existing columns that are modified by \code{...} will always be returned in
their original location.
\item New columns created through \code{...} will be placed according to the
\code{.before} and \code{.after} arguments.
}
}
}
\description{
\code{mutate()} adds new variables and preserves existing ones. New variables
overwrite existing variables of the same name.
Variables can be removed by setting their value to \code{NULL}.
}
\examples{
mtcars \%>\%
  with({
    data.frame(
      A  = mean(disp, na.rm = TRUE),
      dA =   sd(disp, na.rm = TRUE)/sqrt(length(disp)),
      B  = mean(hp, na.rm = TRUE),
      dB =   sd(hp, na.rm = TRUE)/sqrt(length(hp))
    )
  }) \%>\%
  mutate_with_error(C = A + B, D = A / B)
}
